===============================
Testcase for say_my_name module
===============================

This modules defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Betty", "Stone")
    My name is Betty Stone

::

    >>> say_my_name("Omaka", "Kelvin")
    My name is Omaka Kelvin

The parameter ```last_name``` can be optional. when no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Enoch")
    My name is Enoch

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(8, "John")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Stone", ["Cain", "Juliet", "Harriet"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Bryann": 9, "Tochi": 9}, 3.0)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
