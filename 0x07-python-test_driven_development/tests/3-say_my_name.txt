Test case for 3-say_my_name module
==================================
A module that defines a function say_my_name ``say_my_name(first_name, last_name="")``

Usage
=====
import module

   >>> say_my_name = __import__('3-say_my_name').say_my_name

::

When two strings are inputed by the user
   >>> say_my_name("tolu", "bayo")
   my name is tolu, bayo

::

When one string is inputed
   >>> say_my_name("Cain")
   my name is Cain,

::

When an integer and a string are inputed
   >>> say_my_name(9, "Wood")
   Traceback (most recent call last):
   TypeError: first_name must be a string

::

When a string and a list are inputed
   >>> say_my_name("Eden", ['stone'])
   Traceback (most recent call last):
   TypeError: last name must be a string

::

When None is inputed
   >>> say_my_name(None)
   Traceback (most recent call last):
   TypeError: first name must be a string

::

When a string and dictionary is inputed
   >>> say_my_name("Kelvin", {"name": "4"})
   Traceback (most recent call last):
   TypeError: last name must be a string

::

When the function is called without any parameter inputed
   >>> say_my_name()
   Traceback (most recent call last):
   TypeError: say_my_name() missing 1 required positional argument: 'first_name'

::
